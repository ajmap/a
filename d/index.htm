<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Word Trimmer App</title>
  <style>
    * {
      margin: 0;
    }
    #start {
      text-align: center;
      padding-top: 45vh;
      font-family: Arial, Helvetica, sans-serif;
      font-size: 10vw;
      width: 100vw;
      height: 55vh;
      color: lightblue;
      background-color: rgb(50, 50, 50);
    }
    .container {
        display: none;
        font-family: Arial, sans-serif;
        font-size: 8vw;
        margin: 16vh 8vw;
    }
    .word {
      cursor: pointer;
      margin: 0.5vh 1vw;
      display: inline-block;
      letter-spacing: 0.7vw;
    }
    #button {
      display: none;
      posistion: fixed;
      width: 100vw;
      height: 15vh;
      bottom: 0;
      left: 0;
    }
  </style>
</head>
<body>
  <div id="start">START</div>
  <div class="container">
    <p id="message"></p>
  </div>
  <div ></div>
  <div id = "button" class="next-button" onclick="nextMessage()"></div>

  <script>
    let start = document.getElementById("start");
    let container = document.querySelector(".container");
    let button = document.getElementById("button");
    start.addEventListener("click", () => {
      if (!document.fullscreenElement) {
        document.documentElement.requestFullscreen();
      } else if (document.exitFullscreen) {
        document.exitFullscreen();
      }
      start.style.display = "none";
      container.style.display = "block";
      button.style.display = "block";
    });

    
    const messages = [ "I feel love’s joy like a primal scream in my body, glowing and glittering like fireworks as it moves through me, becomes me, and weaves itself into this moment.", "I feel love’s ecstasy surge through me like a wild song, igniting fireworks in my cells, becoming my breath, my being, and this radiant now."];
    let msgIndex = 0;

    const getSavedWords = (key) => {
      const saved = localStorage.getItem(key);
      return saved ? JSON.parse(saved) : null;
    };

    const saveWords = (key, words) => {
      localStorage.setItem(key, JSON.stringify(words));
    };

    const renderMessage = (words, index) => {
      const container = document.getElementById('message');
      container.innerHTML = '';
      words.forEach((word, i) => {
        const span = document.createElement('span');
        span.textContent = word;
        span.classList.add('word');
        span.onclick = () => {
          if (word.length > 0) {
            words[i] = word.slice(0, -1);
            saveWords(`message-${index}`, words);
            renderMessage(words, index);
          }
        };
        container.appendChild(span);
      });
    };

    const loadMessage = (index) => {
      const saved = getSavedWords(`message-${index}`);
      const words = saved || messages[index].split(' ');
      renderMessage(words, index);
    };

    const nextMessage = () => {
      msgIndex = (msgIndex + 1) % messages.length;
      loadMessage(msgIndex);
    };

    // Initial load
    loadMessage(msgIndex);
  </script>
</body>
</html>
