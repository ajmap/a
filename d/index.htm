<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Random Sentence App</title>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            overflow: hidden; /* Prevent scrolling */
        }
        /* Ensure the main container takes up full viewport height */
        #app-container {
            width: 100vw;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        /* Style for the initial black screen overlay */
        #black-screen {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: black;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            z-index: 10; /* Ensure it's on top */
            transition: opacity 0.5s ease-out; /* Smooth fade-out */
        }
        #black-screen.hidden {
            opacity: 0;
            pointer-events: none; /* Make it unclickable when hidden */
        }
    </style>
</head>
<body class="bg-gray-900 text-white">
    <!-- Main application container -->
    <div id="app-container" class="relative">
        <!-- The black screen overlay -->
        <div id="black-screen">
            <p class="text-3xl sm:text-4xl md:text-5xl font-bold text-gray-300 animate-pulse">Click anywhere to begin</p>
        </div>

        <!-- Container for displaying sentences -->
        <div id="sentence-display"
             class="text-center text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-extrabold cursor-pointer max-w-4xl p-4 rounded-xl transition-all duration-300 ease-in-out hover:scale-105"
             style="display: none;">
            <p id="current-sentence" class="text-white text-shadow-lg leading-tight"></p>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const blackScreen = document.getElementById('black-screen');
            const sentenceDisplay = document.getElementById('sentence-display');
            const currentSentenceParagraph = document.getElementById('current-sentence');
            const appContainer = document.getElementById('app-container');

            // Array of sentences to display
            const sentences = [
                "The quiet whispers of the wind carried ancient secrets.",
                "Stars glittered like diamonds scattered across a velvet sky.",
                "In every ending, there is a new beginning waiting to unfold.",
                "Creativity is intelligence having fun.",
                "The journey of a thousand miles begins with a single step.",
                "Sometimes, the smallest step in the right direction ends up being the biggest step of your life.",
                "Life is what happens when you're busy making other plans.",
                "The only way to do great work is to love what you do.",
                "The future belongs to those who believe in the beauty of their dreams.",
                "An unexamined life is not worth living.",
                "Imagination is more important than knowledge."
            ];

            let lastSentenceIndex = -1; // To keep track of the last displayed sentence

            /**
             * Selects a random sentence from the array.
             * Ensures the new sentence is different from the last one if possible.
             * @returns {string} A random sentence.
             */
            function getRandomSentence() {
                let randomIndex;
                do {
                    randomIndex = Math.floor(Math.random() * sentences.length);
                } while (randomIndex === lastSentenceIndex && sentences.length > 1); // Avoid repeating the same sentence immediately
                lastSentenceIndex = randomIndex;
                return sentences[randomIndex];
            }

            /**
             * Activates fullscreen mode for the document.
             */
            function activateFullscreen() {
                if (document.documentElement.requestFullscreen) {
                    document.documentElement.requestFullscreen();
                } else if (document.documentElement.mozRequestFullScreen) { /* Firefox */
                    document.documentElement.mozRequestFullScreen();
                } else if (document.documentElement.webkitRequestFullscreen) { /* Chrome, Safari and Opera */
                    document.documentElement.webkitRequestFullscreen();
                } else if (document.documentElement.msRequestFullscreen) { /* IE/Edge */
                    document.documentElement.msRequestFullscreen();
                }
            }

            /**
             * Handles the initial click on the black screen.
             * Hides the black screen, activates fullscreen, and displays the first sentence.
             */
            blackScreen.addEventListener('click', () => {
                blackScreen.classList.add('hidden'); // Start fade-out
                activateFullscreen(); // Activate fullscreen

                // Wait for the fade-out transition to complete before hiding fully and showing content
                blackScreen.addEventListener('transitionend', () => {
                    blackScreen.style.display = 'none'; // Completely remove from layout
                    sentenceDisplay.style.display = 'flex'; // Show the sentence display
                    currentSentenceParagraph.textContent = getRandomSentence(); // Display the first random sentence
                }, { once: true }); // Ensure this listener only runs once
            });

            /**
             * Handles clicks on the displayed sentence.
             * Shows another random sentence.
             */
            sentenceDisplay.addEventListener('click', () => {
                currentSentenceParagraph.textContent = getRandomSentence();
            });

            // Optional: Handle fullscreen exit (e.g., via ESC key)
            document.addEventListener('fullscreenchange', () => {
                if (!document.fullscreenElement) {
                    // If fullscreen is exited, you might want to show the black screen again or reset state
                    // For this app, we'll just keep the sentence display visible but allow exit.
                    console.log('Exited fullscreen mode.');
                }
            });
        });
    </script>
</body>
</html>
