<!DOCTYPE html>
<html lang="nl">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Lees App</title>
  <style>
    body, html {
      margin: 0;
      padding: 0;
      height: 100%;
      font-family: sans-serif;
      background: #fff;
      color: #111;
    }

    #start-screen {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100vh;
      background: #111;
      color: #fff;
      font-size: 2rem;
      cursor: pointer;
    }

    #reader {
      display: none;
      padding: 1rem;
      line-height: 1.6;
    }
  </style>
</head>
<body>

  <div id="start-screen">START</div>

  <div id="reader">

  </div>

  <script>
    localStorage.clear();
    const startScreen = document.getElementById('start-screen');
    const reader = document.getElementById('reader');

    // Ga naar opgeslagen positie bij openen
    window.onload = () => {
      const savedScroll = localStorage.getItem('leesapp-scroll');
      if (savedScroll) {
        window.scrollTo(0, parseInt(savedScroll));
      }
    };

    // Startknop
    startScreen.onclick = async () => {
      startScreen.style.display = 'none';
      reader.style.display = 'block';

      // Volledig scherm activeren (indien ondersteund)
      if (document.documentElement.requestFullscreen) {
        await document.documentElement.requestFullscreen();
      }

      // Scroll naar opgeslagen positie
      const savedScroll = localStorage.getItem('leesapp-scroll');
      if (savedScroll) {
        window.scrollTo(0, parseInt(savedScroll));
      }
    };

    // Klik = scroll 1 schermhoogte naar beneden
    document.addEventListener('click', () => {
      window.scrollBy({
        top: window.innerHeight,
        left: 0,
        behavior: 'smooth'
      });
    });

    // Scrollpositie opslaan
    window.addEventListener('scroll', () => {
      localStorage.setItem('leesapp-scroll', window.scrollY);
    });
  </script>

</body>
</html>

