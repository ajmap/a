<!DOCTYPE html>
<html lang="nl">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Lees App</title>
  <style>
    * {
      margin: 0;
    }

    #start-screen {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100vh;
      background: #111;
      color: #fff;
      font-size: 2rem;
      cursor: pointer;
    }

    #reader {
      margin: 2vh 0 0 2vw;
      display: none;
      font-size: 1rem;
      line-height: 1.05rem;
    }
    .cm { color: Gainsboro }
  </style>
</head>
<body>

  <div id="start-screen">START</div>

  <div id="reader">
        <p class="cm">// Log number</p>
    <p class="cd">console.log(100);</p>
<br>
    <p class="cm">// Log string</p>
    <p class="cd">console.log('Hello World');</p>
<br>
    <p class="cm">// Log multiple values</p>
    <p class="cd">console.log(20, 'Hello', true);</p>
<br>
    <p class="cm">// Log a variable</p>
    <p class="cd">const x = 100;</p>
    <p class="cd">console.log(x);</p>
<br>
    <p class="cm">// Console error & warning</p>
    <p class="cd">console.error('Alert');</p>
    <p class="cd">console.warn('Warning');</p>
<br>
    <p class="cm">// Log object as table</p>
    <p class="cd">console.table({ name: 'Brad', email: 'brad@gmail.com' });</p>
<br>
    <p class="cm">// Group console commands</p>
    <p class="cd">console.group('simple');</p>
    <p class="cd">console.log(x);</p>
    <p class="cd">console.error('Alert');</p>
    <p class="cd">console.warn('Warning');</p>
    <p class="cd">console.groupEnd();</p>
<br>
    <p class="cm">// Add CSS to logs</p>
    <p class="cd">
      const styles = 'padding: 10px; background-color: white; color: green';
    </p>
    <p class="cd">console.log('%cHello World', styles);</p>
<br>
  </div>

  <script>
    const startScreen = document.getElementById('start-screen');
    const reader = document.getElementById('reader');

    startScreen.onclick = async () => {
      startScreen.style.display = 'none';
      reader.style.display = 'block';

      // Fullscreen activeren (indien ondersteund)
      if (document.documentElement.requestFullscreen) {
        await document.documentElement.requestFullscreen();
      }

      // Scroll direct naar het einde
      setTimeout(() => {
        window.scrollTo(0, document.body.scrollHeight);
      }, 100); // even wachten tot layout klaar is
    };
  </script>

</body>
</html>
