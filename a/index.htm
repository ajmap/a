<!DOCTYPE html>
<html>
<head>
<title>I Now Accept</title>
<style>
          #s {
          margin: 25vh 0 0 0;
                    font-size: 12vw;
      }
          #e {
                    font-size: 12vw;
      }
body {
          font-family: Arial;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
  font-size: 3em;
  user-select: none; /* Prevent text selection */
}
  #wordDisplay { display: none; }
</style>
</head>
<body>
      <div id="s">START<br><br><br><br><br><br><br><br><br><br><br><br></div>
      <div id="e">END</div>
<div id="wordDisplay"></div>

<script>
let s = document.getElementById("s")
let e = document.getElementById("e")
let wordDisplay = document.getElementById("wordDisplay")
          const sentences = [
  "I now accpet my divine birthright, I now consciously enter into my partnership with love, with peace, with joy, with God.", 
  "I feel the infinite presence close around me. I feel the warmth, the colour and the radiance of this presence like a living thing which I am enveloped.", 
  "I am no longer afraid of life. A deep and abiding sense of calm and poise flows through me. I have faith to believe that the kingdom of God is at hand.", 
  "It is right where I am, here, now, today, at this very moment. I feel that there is a divine law of good which can and will and does govern everything.",
  "Therefor, I feel that everything in my life that is constructive, everything in my thought that is life-giving is blessed and prospered.",
  "It blesses everyone I meet. It makes glad every situation I find myself in. It brings peace and confort to everyone I contact.",
  "I am united with everything, in love, in peace and in joy.",
  "And I know that the presence of love and life gently leads me and all others, guiding, guarding, sustaining, upholding - now and forever                  
];
                             
          e.addEventListener("click", () => {
          if (!document.fullscreenElement) {
          document.documentElement.requestFullscreen() } 
          else if (document.exitFullscreen) {
          document.exitFullscreen();
          }
          e.style.display = "none";
          s.style.display = "none";
          wordDisplay.style.display = "block";

const rndm = Math.floor(Math.random() * sentences.length)          
const sentence = sentences[rndm];
let words = sentence.split(" ");
let currentWordIndex = words.length - 1;
let currentWord = words[currentWordIndex];
let currentLetterIndex = currentWord.length - 1;



function displayWord() {
  wordDisplay.textContent = currentWord;
}

function eraseLetter() {
  if (currentLetterIndex >= 0) {
    currentWord = currentWord.substring(0, currentLetterIndex);
    currentLetterIndex--;
    displayWord();
  } else {
    currentWordIndex--;
    if (currentWordIndex >= 0) {
      currentWord = words[currentWordIndex];
      currentLetterIndex = currentWord.length - 1;
      displayWord();
    } else {
      wordDisplay.textContent = "";
    }
  }
}

displayWord(); // Initial display

        let intervalId;
        let dynamicDelay = 501;
        
        function startDynamicInterval() {
          intervalId = setInterval(myFunction, dynamicDelay);
        }
        
        function myFunction() {
          eraseLetter();
        
          dynamicDelay += 51;
        
          clearInterval(intervalId);
          startDynamicInterval();
        }
        
        startDynamicInterval();   
      });

            s.addEventListener("click", () => {
        if (!document.fullscreenElement) {
          document.documentElement.requestFullscreen();
        } else if (document.exitFullscreen) {
          document.exitFullscreen();
        }
        s.style.display = "none";
        e.style.display = "none";
        wordDisplay.style.display = "block";
   
const rndm = Math.floor(Math.random() * sentences.length);          
const sentence = sentences[rndm];
let words = sentence.split(" ");

let currentWordIndex = 0;
let originalWord = words[currentWordIndex];
let currentLetterIndex = 0;
let currentWord = originalWord;

function displayWord() {
  wordDisplay.textContent = currentWord;
}

function eraseLetter() {
  if (currentLetterIndex < originalWord.length) {
    currentWord = originalWord.substring(currentLetterIndex + 1);
    currentLetterIndex++;
    displayWord();
  } else {
    currentWordIndex++;
    if (currentWordIndex < words.length) {
      originalWord = words[currentWordIndex];
      currentLetterIndex = 0;
      currentWord = originalWord;
      displayWord();
    } else {
      wordDisplay.textContent = "";
      clearInterval(intervalId); // Done
    }
  }
}

displayWord(); // Initial display

let intervalId;
let dynamicDelay = 500;

function startDynamicInterval() {
  intervalId = setInterval(myFunction, dynamicDelay);
}

function myFunction() {
  eraseLetter();
  dynamicDelay += 50;
  clearInterval(intervalId);
  startDynamicInterval();
}

startDynamicInterval();
      });



</script>
</body>
</html>

