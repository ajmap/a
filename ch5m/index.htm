<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chess Timer</title>
    <style>
        body {
    margin: 0;
    height: 100vh;
    display: flex;
    flex-direction: column;
    background-color: #333;
    font-family: Arial, sans-serif;
    color: white;
}

#c {
    flex: 1;
    display: none;
    flex-direction: column;
}

.player {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    padding: 20px;
}

#player1 {
    background-color: #555;
    transform: rotate(180deg);
}

#player2 {
    background-color: #777; 
}

.time {
    font-size: 20vw;
}
    #a {                background-color: black;
            width: 100vw;
            height: 100vh;
            z-index: 2;
            display: block;
        }

    </style>
</head>
<body>
    <div id='a'></div>
    <div id='c' class="container">
        <div class="player" id="player1">
            <div class="time" id="time1">05:00</div>
        </div>
        <div class="player" id="player2">
            <div class="time" id="time2">05:00</div>
        </div>
    </div>

    <script>
        let a = document.getElementById("a");
        let c = document.getElementById("c");
      a.addEventListener("click", () => {
        if (!document.fullscreenElement) {
          document.documentElement.requestFullscreen();
        } else if (document.exitFullscreen) {
          document.exitFullscreen();
        }
          a.style.display = 'none'
          c.style.display = 'flex'

      });
let time1 = 300; // Default to 5 minutes (300 seconds)
let time2 = 300; // Default to 5 minutes (300 seconds)
let timer1, timer2;
let currentPlayer = null; // No player is active initially
let isRunning = false;

document.getElementById('player1').addEventListener('click', () => handlePlayerClick(1));
document.getElementById('player2').addEventListener('click', () => handlePlayerClick(2));

function handlePlayerClick(player) {
    if (!isRunning) {
        startTimer(player);
    } else if (currentPlayer === player) {
        switchPlayer();
    }
}

function startTimer(player) {
    currentPlayer = player;
    isRunning = true;

    if (player === 1) {
        timer1 = setInterval(() => updateTime(1), 1000);
    } else {
        timer2 = setInterval(() => updateTime(2), 1000);
    }
}

function switchPlayer() {
    clearInterval(currentPlayer === 1 ? timer1 : timer2);

    currentPlayer = currentPlayer === 1 ? 2 : 1;

    if (currentPlayer === 1) {
        timer1 = setInterval(() => updateTime(1), 1000);
    } else {
        timer2 = setInterval(() => updateTime(2), 1000);
    }
}

function updateTime(player) {
    if (player === 1) {
        time1--;
        if (time1 <= 0) {
            clearInterval(timer1);
            time1 = 0;
        }
    } else {
        time2--;
        if (time2 <= 0) {
            clearInterval(timer2);
            time2 = 0;
        }
    }
    updateDisplay();
}

function updateDisplay() {
    document.getElementById('time1').textContent = formatTime(time1);
    document.getElementById('time2').textContent = formatTime(time2);
}

function formatTime(seconds) {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;
}

    </script>
</body>
</html>
