<!DOCTYPE html>
<html>
<head>
<title>Welcome</title>
<style>
          #s {
        background-color: black;
        width: 100vw;
        height: 100vh;
      }

body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
  font-size: 3em;
  user-select: none; /* Prevent text selection */
}
  #wordDisplay { display: none; }
</style>
</head>
<body>
      <div id="s"></div>
<div id="wordDisplay"></div>

<script>
  


let s = document.getElementById("s");
       let wordDisplay = document.getElementById("wordDisplay");
            s.addEventListener("click", () => {
        if (!document.fullscreenElement) {
          document.documentElement.requestFullscreen();
        } else if (document.exitFullscreen) {
          document.exitFullscreen();
        }
        s.style.display = "none";
        wordDisplay.style.display = "block";
      });

const sentences = ["I listen closely to the wisdom of my heart, trusting it to guide me gently forward. .",
"I honor the desires of my heart and give myself permission to follow them with courage. .",
"My heart beats in harmony with the universe, drawing joy and connection into my experience.",
"I lead with my heart, trusting that love and truth will shape the way I live. .",
"My heart is resilient, strong, and capable of healing from any pain or disappointment. .",
"I carry a heart full of purpose and passion, ready to share my gifts with the world. .",
"My heart knows the way, and I follow its rhythm with trust and quiet determination. .",
"I release fear and allow my heart to lead me toward experiences of joy and growth. .",
"My heart is a sanctuary of peace, and I return to its calm center whenever I need. .",
"I feel deeply connected to the truth and wisdom that lives inside my open heart. .",
"My heart speaks clearly when I quiet my mind and listen with patience and presence. .",
"I offer my heart freely to the world, knowing its light will return to me multiplied. .",
"My heart is a magnet for kindness, connection, and experiences that honor my true essence. .",
"My heart holds the wisdom of generations, and I carry that love with reverence and pride. .",
"Gentle ocean swirls are in rhythm with my breathing, love saturates my heart, I am seriously glowing."];
const rndm = Math.floor(Math.random() * sentences.length)          
const sentence = sentences[rndm];
let words = sentence.split(" ");
let currentWordIndex = words.length - 1;
let currentWord = words[currentWordIndex];
let currentLetterIndex = currentWord.length - 1;



function displayWord() {
  wordDisplay.textContent = currentWord;
}

function eraseLetter() {
  if (currentLetterIndex >= 0) {
    currentWord = currentWord.substring(0, currentLetterIndex);
    currentLetterIndex--;
    displayWord();
  } else {
    currentWordIndex--;
    if (currentWordIndex >= 0) {
      currentWord = words[currentWordIndex];
      currentLetterIndex = currentWord.length - 1;
      displayWord();
    } else {
      wordDisplay.textContent = "";
    }
  }
}

displayWord(); // Initial display


        let intervalId;
        let dynamicDelay = 500;
        
        function startDynamicInterval() {
          intervalId = setInterval(myFunction, dynamicDelay);
        }
        
        function myFunction() {
          eraseLetter();
        
          dynamicDelay += 50;
        
          clearInterval(intervalId);
          startDynamicInterval();
        }
        
        startDynamicInterval();          
</script>
</body>
</html>

<!-- <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Audio Fade-In and Fade-Out</title>
</head>
<body>
  <h1>Play Audio with Fade In and Fade Out</h1>
  <button id="playSection1">Play Section 1</button>
  <button id="playSection2">Play Section 2</button>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const audioContext = new (window.AudioContext || window.webkitAudioContext)();
      const gainNode = audioContext.createGain();
      let audioBuffer;

      // Load the audio file once
      async function loadAudio() {
        if (audioBuffer) return; // Avoid loading multiple times
        const response = await fetch("2.mp3"); // Replace with your MP3 file path
        const arrayBuffer = await response.arrayBuffer();
        audioBuffer = await audioContext.decodeAudioData(arrayBuffer);
      }

      // Function to play a specific section of the audio with fade-in and fade-out
      function playAudioSection(startTime, duration, fadeInTime = 3, fadeOutTime = 3) {
        if (!audioBuffer) return;

        const source = audioContext.createBufferSource();
        source.buffer = audioBuffer;

        // Connect source to gain node and audio context destination
        source.connect(gainNode);
        gainNode.connect(audioContext.destination);

        // Set gain for fade-in
        gainNode.gain.setValueAtTime(0, audioContext.currentTime); // Start at 0 volume
        gainNode.gain.linearRampToValueAtTime(1, audioContext.currentTime + fadeInTime); // Fade in to full volume

        // Set gain for fade-out
        const fadeOutStartTime = audioContext.currentTime + (duration - fadeOutTime);
        gainNode.gain.setValueAtTime(1, fadeOutStartTime); // Stay at full volume
        gainNode.gain.linearRampToValueAtTime(0, fadeOutStartTime + fadeOutTime); // Fade out to 0 volume

        // Start and stop the audio
        source.start(audioContext.currentTime, startTime, duration);
        source.stop(audioContext.currentTime + duration);
      }

      // Add event listeners to buttons
      document.getElementById("playSection1").addEventListener("click", () => {
        loadAudio().then(() => {
          playAudioSection(80, 10); // Play section starting at 10 seconds, duration 5 seconds
        });
      });

      document.getElementById("playSection2").addEventListener("click", () => {
        loadAudio().then(() => {
          playAudioSection(90, 10); // Play section starting at 30 seconds, duration 6 seconds
        });
      });
    });
  </script>
</body>
</html> -->
