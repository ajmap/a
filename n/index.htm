<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Word Trimmer Timed</title>
  <style>
    body {
      font-family: monospace;
      font-size: 4.3vw;
      background: #f4f4f4;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }
    .container {
      text-align: center;
      padding: 20px;
      background: white;
      border-radius: 12px;
      box-shadow: 0 0 20px rgba(0,0,0,0.1);
    }
  </style>
</head>
<body>
  <div class="container">
    <p id="message">Loading...</p>
  </div>

  <script>
    const messages = [ "I feel love’s joy like a primal scream in my body, glowing and glittering like fireworks as it moves through me, becomes me, and weaves itself into this moment.", "I feel love’s ecstasy surge through me like a wild song, igniting fireworks in my cells, becoming my breath, my being, and this radiant now.", "Love flows through me like liquid starlight, shimmering and alive, dissolving all boundaries as it becomes me, this breath, this sacred moment.", "Love roars through me like the earth's first cry, fierce and luminous, lighting my body from within and fusing me with the present.", "I feel love’s joy unfold within me like soft golden fire, glimmering through my being, merging with the now in perfect harmony.", "Love explodes in me like a star being born, radiant and infinite, threading itself through my essence and anchoring me in the miracle of this moment."];
    

    const localStoragePrefix = 'shrunkText-';
    let msgIndex = 0;

    function getTextFromStorage(index) {
      return localStorage.getItem(localStoragePrefix + index) || messages[index];
    }

    function saveTextToStorage(index, text) {
      localStorage.setItem(localStoragePrefix + index, text);
    }

    function shrinkText(text) {
      let words = text.match(/\b\w+[^\s\w]*|[^\s\w]+/g);
      if (!words) return text;

      let maxLength = Math.max(...words.map(w => w.length));
      let newWords = words.map(w => (w.length === maxLength ? w.slice(0, -1) : w));

      let result = newWords.join(' ');
      return result.replace(/ (?=[.,!?])/g, '');
    }

    function renderMessage(index) {
      const textContainer = document.getElementById('message');
      let currentText = getTextFromStorage(index);
      textContainer.textContent = currentText;
      currentText = shrinkText(currentText);
      saveTextToStorage(index, currentText);
    }

    function cycleMessages() {
      if (msgIndex >= messages.length) {
        document.getElementById('message').innerHTML = '';
        return;
      }
      renderMessage(msgIndex);
      msgIndex++;
      setTimeout(cycleMessages, 10000);
    }

    window.onload = () => {
      cycleMessages();
    };
  </script>
</body>
</html>
