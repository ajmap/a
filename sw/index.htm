<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Three Column Swipable Layout</title>
  <style>
    /* Container and Columns for Desktop */
.container {
  display: flex;
  width: 100vw;
  height: 100vh;
}

.column {
  flex: 1;
  padding: 20px;
  text-align: center;
  background-color: lightgray;
  border: 1px solid #ccc;
  transition: transform 0.3s ease-in-out;
}

/* Mobile View (Portrait Mode) */
@media (max-width: 768px) {
  .container {
    display: flex;
    flex-wrap: nowrap;
    overflow-x: hidden;
    width: 300%; /* 3 columns width */
  }

  .column {
    min-width: 100vw; /* Each column takes the full viewport width */
    height: 100vh;
  }
}

  </style>
</head>
<body>
  <div class="container">
    <div class="column" id="column1">Column 1</div>
    <div class="column" id="column2">Column 2</div>
    <div class="column" id="column3">Column 3</div>
  </div>

  <script>
    const container = document.querySelector('.container');
let startX, currentX;
let currentColumn = 0;
const totalColumns = 3;

container.addEventListener('touchstart', (e) => {
  startX = e.touches[0].pageX;
});

container.addEventListener('touchmove', (e) => {
  currentX = e.touches[0].pageX;
  const deltaX = currentX - startX;

  // Swipe left or right within limits
  const maxTranslateX = -((totalColumns - 1) * window.innerWidth);
  const translateX = Math.min(0, Math.max(maxTranslateX, -currentColumn * window.innerWidth + deltaX));

  container.style.transform = `translateX(${translateX}px)`;
});

container.addEventListener('touchend', (e) => {
  const deltaX = currentX - startX;

  // Determine if swipe was significant enough to change columns
  if (deltaX < -50 && currentColumn < totalColumns - 1) {
    currentColumn++;
  } else if (deltaX > 50 && currentColumn > 0) {
    currentColumn--;
  }

  // Snap to the new column
  container.style.transform = `translateX(-${currentColumn * window.innerWidth}px)`;
});

  </script>
</body>
</html>
